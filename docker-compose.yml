version: '3.8'
services:
  nginx:
    image: nginx:alpine
    container_name: dubdub_nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/nginx/conf.d:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./frontend/dist:/usr/share/nginx/html
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - app
  
  certbot:
    image: certbot/certbot
    container_name: dubdub_certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dubdub_app
    ports:
      - "8443"
    volumes:
      - ./logs:/app/logs
      - /home/ubuntu/jenkins-data/workspace/server-branch-deploy/keystore:/app/keystore
    env_file:
      - .env   # Jenkins에서 복사된 .env 파일을 자동 로드
    environment:
      SPRING_PROFILES_ACTIVE: prod  # 배포 환경 적용
      REDIS_HOST: redis  # Redis 컨테이너의 이름
      REDIS_PORT: 6379
    depends_on: 
      - redis  # Redis 컨테이너가 먼저 실행됨

  redis:
    image: redis:7-alpine
    container_name: dubdub_redis
    ports:
      - "6379:6379"  # 호스트와 동일한 포트 매핑
    command: redis-server --appendonly yes  # 영속성 활성화
    volumes:
      - redis_data:/data  # Redis 데이터 영속화
    restart: always

volumes:
  redis_data:  # Redis 데이터를 저장하는 볼륨
