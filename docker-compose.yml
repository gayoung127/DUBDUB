version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dubdub_app
    ports:
      - "80:8080"
    volumes:
      - ./logs:/app/logs
    env_file:
      - .env   # Jenkins에서 복사된 .env 파일을 자동 로드
    environment:
      REDIS_HOST: redis  # Redis 컨테이너의 이름
      REDIS_PORT: 6379
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
    depends_on: 
      - redis  # Redis 컨테이너가 먼저 실행됨
      - mysql
    restart: always

  redis:
    image: redis:7-alpine
    container_name: dubdub_redis
    ports:
      - "6379:6379"  # 호스트와 동일한 포트 매핑
    command: redis-server --appendonly yes  # 영속성 활성화
    volumes:
      - redis_data:/data  # Redis 데이터 영속화
    restart: always

  mysql:
    image: mysql:8.0
    container_name: dubdub_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}     # 데이터베이스 이름만 지정
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql          # 데이터 영속성을 위한 볼륨
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    
volumes:
  redis_data:  # Redis 데이터를 저장하는 볼륨
  mysql_data:
